{"version":3,"sources":["../../src/controllers/login.js"],"names":["req","res","body","email","password","account","User","findOne","where","status","send","message","validPass","bcrypt","compare","token","id","firstName","lastName","role"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;eAEe,wBAAOA,GAAP,EAAYC,GAAZ,EAAoB;AAAA,kBACLD,GAAG,CAACE,IADC;AAAA,MACzBC,KADyB,aACzBA,KADyB;AAAA,MAClBC,QADkB,aAClBA,QADkB;AAEjC,MAAMC,OAAO,GAAG,MAAMC,aAAKC,OAAL,CAAa;AAAEC,IAAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAALA;AAAF;AAAT,GAAb,CAAtB;;AACA,MAAI,CAACE,OAAL,EAAc;AACZ,WAAOJ,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,MAAAA,OAAO,EAAE;AADiB,KAArB,CAAP;AAGD;;AACD,MAAMC,SAAS,GAAG,MAAMC,mBAAOC,OAAP,CAAeV,QAAf,EAAyBC,OAAO,CAACD,QAAjC,CAAxB;;AACA,MAAI,CAACQ,SAAL,EAAgB;AACd,WAAOX,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,MAAAA,OAAO,EAAE;AADiB,KAArB,CAAP;AAGD;;AACD,MAAMI,KAAK,GAAG,0BAAS;AACrBC,IAAAA,EAAE,EAAEX,OAAO,CAACW,EADS;AAErBb,IAAAA,KAAK,EAAEE,OAAO,CAACF,KAFM;AAGrBc,IAAAA,SAAS,EAAEZ,OAAO,CAACY,SAHE;AAIrBC,IAAAA,QAAQ,EAAEb,OAAO,CAACa,QAJG;AAKrBC,IAAAA,IAAI,EAAEd,OAAO,CAACc;AALO,GAAT,CAAd;AAQAlB,EAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,OAAO,EAAE,uBAAX;AAAoCI,IAAAA,KAAK,EAALA;AAApC,GAArB;AACD,C","sourcesContent":["import bcrypt from \"bcrypt\";\r\nimport { User } from \"../../models\";\r\nimport genToken from \"../helpers/tokenGen\";\r\n\r\nexport default async (req, res) => {\r\n  const { email, password } = req.body;\r\n  const account = await User.findOne({ where: { email } });\r\n  if (!account) {\r\n    return res.status(401).send({\r\n      message: \"Email or password is incorrect\"\r\n    });\r\n  }\r\n  const validPass = await bcrypt.compare(password, account.password);\r\n  if (!validPass) {\r\n    return res.status(401).send({\r\n      message: \"Email or password is incorrect\"\r\n    });\r\n  }\r\n  const token = genToken({\r\n    id: account.id,\r\n    email: account.email,\r\n    firstName: account.firstName,\r\n    lastName: account.lastName,\r\n    role: account.role\r\n  });\r\n\r\n  res.status(200).send({ message: \"Successfully loged in\", token });\r\n};\r\n"],"file":"login.js"}