{"version":3,"sources":["../../src/controllers/partners.js"],"names":["addPartner","req","res","body","name","logo","partnerWeb","addedPartner","Partner","create","status","json","msg","getPartners","partners","findAll","length","getPartner","id","params","singlePartner","findOne","where","updatePartner","partnerToUpdate","updatedPartner","update","deletePartner","partnerToDelete","destroy","deletedPartner"],"mappings":"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","sourcesContent":["import { Partner }  from '../../models'\r\n\r\nexport default {\r\n    addPartner: async (req, res) => {\r\n        const { name, logo, partnerWeb } = req.body;\r\n        const addedPartner = await Partner.create({\r\n            name,\r\n            logo,\r\n            partnerWeb\r\n        });\r\n\r\n        return res.status(201).json({ msg: 'Partner added successfully', addedPartner })\r\n    },\r\n    getPartners: async (req, res) => {\r\n        const partners = await Partner.findAll();\r\n        if (partners.length === 0) return res.status(400).json({ msg: 'There are no Partners yet'})\r\n\r\n        return res.status(200).json({ partners })\r\n    },\r\n    getPartner: async (req, res) => {\r\n        const { id } = req.params;\r\n        const singlePartner = await Partner.findOne({ where: { id }});\r\n\r\n        if (!singlePartner) return res.status(400).json({ msg: 'No partner found'})\r\n\r\n        return res.status(200).json({ singlePartner })\r\n    },\r\n    updatePartner: async (req, res) => {\r\n        const { id } = req.params;\r\n        const partnerToUpdate = await Partner.findOne({ where: { id }});\r\n        \r\n        if (!partnerToUpdate) return res.status(404).json({ msg: 'No partner found'})\r\n\r\n        const updatedPartner = await partnerToUpdate.update(req.body);\r\n\r\n        return res.status(200).json({ msg: 'Partner updated successfully', updatedPartner})\r\n    },\r\n    deletePartner: async (req, res) => {\r\n        const { id } = req.params;\r\n        const partnerToDelete = await Partner.findOne({ where: { id }});\r\n\r\n        if (!partnerToDelete) return res.status(404).json({ msg: 'No partner found'})\r\n\r\n        await partnerToDelete.destroy();\r\n        const deletedPartner = partnerToDelete;\r\n        return res.status(200).json({ msg: 'Partner deleted successfully', deletedPartner})\r\n    }\r\n};\r\n"],"file":"partners.js"}