{"version":3,"sources":["../../src/controllers/partners.js"],"names":["addPartner","req","res","body","name","logo","addedPartner","Partner","create","status","json","msg","getPartners","savedPartners","findAll","length","getPartner","id","params","singlePartner","findOne","where","updatePartner","partnerToUpdate","updatedPartner","update","deletePartner","partnerToDelete","destroy","deletedPartner"],"mappings":"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","sourcesContent":["import { Partner }  from '../../models'\r\n\r\nexport default {\r\n    addPartner: async (req, res) => {\r\n        const { name, logo } = req.body;\r\n        const addedPartner = await Partner.create({\r\n            name,\r\n            logo\r\n        });\r\n\r\n        return res.status(201).json({ msg: 'Partner added successfully', addedPartner })\r\n    },\r\n    getPartners: async (req, res) => {\r\n        const savedPartners = await Partner.findAll();\r\n        if (savedPartners.length === 0) return res.status(400).json({ msg: 'There are no Partners yet'})\r\n\r\n        return res.status(200).json({ savedPartners })\r\n    },\r\n    getPartner: async (req, res) => {\r\n        const { id } = req.params;\r\n        const singlePartner = await Partner.findOne({ where: { id }});\r\n\r\n        if (!singlePartner) return res.status(400).json({ msg: 'No partner found'})\r\n\r\n        return res.status(200).json({ singlePartner })\r\n    },\r\n    updatePartner: async (req, res) => {\r\n        const { id } = req.params;\r\n        const partnerToUpdate = await Partner.findOne({ where: { id }});\r\n        \r\n        if (!partnerToUpdate) return res.status(404).json({ msg: 'No partner found'})\r\n\r\n        const updatedPartner = await partnerToUpdate.update(req.body);\r\n\r\n        return res.status(200).json({ msg: 'Partner updated successfully', updatedPartner})\r\n    },\r\n    deletePartner: async (req, res) => {\r\n        const { id } = req.params;\r\n        const partnerToDelete = await Partner.findOne({ where: { id }});\r\n\r\n        if (!partnerToDelete) return res.status(404).json({ msg: 'No partner found'})\r\n\r\n        await partnerToDelete.destroy();\r\n        const deletedPartner = partnerToDelete;\r\n        return res.status(200).json({ msg: 'Partner deleted successfully', deletedPartner})\r\n    }\r\n};\r\n"],"file":"partners.js"}