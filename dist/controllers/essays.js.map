{"version":3,"sources":["../../src/controllers/essays.js"],"names":["Essay","Models","recordEssay","req","res","body","fullName","email","phone","birthDate","guardianName","guardianPhone","parentsId","district","school","year","topic","essay","emailExist","findOne","where","status","send","message","essayOption","sgMail","setApiKey","process","env","SENDGRID_API_KEY","msg","then","createdEssay","create","error","err","getEssays","essays","findAll","getSingleEssay","singleEssay","id","params","deleteEssay","deletedEssay","destroy"],"mappings":"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","sourcesContent":["import sgMail from \"@sendgrid/mail\";\r\nimport Models from \"../../models\";\r\nimport emailMsg from \"../helpers/email\";\r\n\r\nconst { Essay } = Models;\r\n\r\nexport default {\r\n  recordEssay: async (req, res) => {\r\n    const {\r\n      fullName,\r\n      email,\r\n      phone,\r\n      birthDate,\r\n      guardianName,\r\n      guardianPhone,\r\n      parentsId,\r\n      district,\r\n      school,\r\n      year,\r\n      topic,\r\n      essay\r\n    } = req.body;\r\n    const emailExist = await Essay.findOne({ where: { email } });\r\n    if (emailExist) {\r\n      return res.status(200).send({ message: \"Your essay was recorded before\" });\r\n    }\r\n    const essayOption = {\r\n      fullName,\r\n      email,\r\n      phone,\r\n      birthDate,\r\n      guardianName,\r\n      guardianPhone,\r\n      parentsId,\r\n      district,\r\n      school,\r\n      year,\r\n      topic,\r\n      essay\r\n    };\r\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY);\r\n    const msg = emailMsg({\r\n      fullName,\r\n      birthDate,\r\n      phone,\r\n      guardianName,\r\n      guardianPhone,\r\n      parentsId,\r\n      year,\r\n      topic,\r\n      district,\r\n      school,\r\n      essay\r\n    });\r\n\r\n    sgMail\r\n      .send(msg)\r\n      .then(async () => {\r\n        const createdEssay = await Essay.create(essayOption);\r\n        res\r\n          .status(201)\r\n          .send({ message: \"Essay submitted successfully\", createdEssay });\r\n      })\r\n      .catch((error) => {\r\n        res.status(500).send({ err: error.message });\r\n      });\r\n  },\r\n\r\n  getEssays: async (req, res) => {\r\n    const essays = await Essay.findAll();\r\n    res.status(200).send({ essays });\r\n  },\r\n\r\n  getSingleEssay: async (req, res) => {\r\n    const singleEssay = await Essay.findOne({ where: { id: req.params.id } });\r\n    res.status(200).send({ singleEssay });\r\n  },\r\n\r\n  deleteEssay: async (req, res) => {\r\n    const deletedEssay = await Essay.destroy({ where: { id: req.params.id } });\r\n    res.status(200).send({ message: \"Essay deleted successfully\", deletedEssay });\r\n  }\r\n};\r\n"],"file":"essays.js"}