{"version":3,"sources":["../../src/middlewares/authorization.js"],"names":["require","config","auth","req","res","next","token","header","status","send","msg","privateKey","process","env","JWT_SECRET","validToken","jwt","verify","user","error","adminAuth","role"],"mappings":";;;;;;;;;AAAA;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtC,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,YAAX,CAAd;AACA,MAAI,CAACD,KAAL,EAAY,OAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAArB,CAAP;;AACZ,MAAI;AACF,QAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAA/B;;AACA,QAAMC,UAAU,GAAGC,yBAAIC,MAAJ,CAAWX,KAAX,EAAkBK,UAAlB,CAAnB;;AACAR,IAAAA,GAAG,CAACe,IAAJ,GAAWH,UAAX;AACA,WAAOV,IAAI,EAAX;AACD,GALD,CAKE,OAAOc,KAAP,EAAc;AACd,WAAOf,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD;AACF,CAXM;;;;AAaA,IAAMU,SAAS,GAAG,SAAZA,SAAY,CAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MACnCgB,IADmC,GAC1BlB,GAAG,CAACe,IADsB,CACnCG,IADmC;;AAE3C,MAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,WAAOjB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD;;AACD,SAAOL,IAAI,EAAX;AACD,CANM","sourcesContent":["import jwt from \"jsonwebtoken\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nexport const auth = (req, res, next) => {\r\n  const token = req.header(\"auth-token\");\r\n  if (!token) return res.status(401).send({ msg: \"Access Denied, Login first\" });\r\n  try {\r\n    const privateKey = process.env.JWT_SECRET;\r\n    const validToken = jwt.verify(token, privateKey);\r\n    req.user = validToken;\r\n    return next();\r\n  } catch (error) {\r\n    return res.status(401).send({ msg: \"Invalid token\" });\r\n  }\r\n};\r\n\r\nexport const adminAuth = (req, res, next) => {\r\n  const { role } = req.user;\r\n  if (role !== \"Admin\") {\r\n    return res.status(403).send({ msg: \"Access Denied, Available for admin only\" });\r\n  }\r\n  return next();\r\n};\r\n"],"file":"authorization.js"}